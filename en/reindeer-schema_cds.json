{
  "validate": true,
  "schemas": [
    {
      "uri": "https://reindeer.tech/cds-schema/v1/core-schema.json",
      "fileMatch": [
        "https://reindeer.tech/cds-schema/default.json"
      ],
      "schema": {
        "title": "Cloud Design Object",
        "description": "This is the root object of the CDS.",
        "type": "object",
        "required": [
          "reindeer",
          "self",
          "info",
          "actors",
          "resources",
          "contexts"
        ],
        "properties": {
          "reindeer": {
            "title": "Version number",
            "description": "REQUIRED. This string MUST be the semantic version number of the CDS version. The reindeer field SHOULD be used by tools for interpreting the CDS. This is not related to the info.version string.",
            "type": "string",
            "enum": [
              "1.1.0"
            ]
          },
          "self": {
            "title": "File name",
            "description": "REQUIRED. This string is the filename of the CDS. It MUST be with the extension, .json, .yaml or .yml. The self field SHOULD be used by tools for interpreting the CDS.",
            "type": "string",
            "default": "cloudDesign.json",
            "pattern": "^[a-zA-Z0-9_.\\-]+\\.(yaml|yml|json)$"
          },
          "info": {
            "title": "Info",
            "description": "REQUIRED. Provides metadata about the cloud computing adoption. The metadata MAY be used by tooling as required.",
            "$ref": "https://reindeer.tech/cds-schema/v1/info.json"
          },
          "actors": {
            "title": "Actors",
            "description": "REQUIRED. An array of actor objects, which provide information about the external user or system to which cloud computing is connected.",
            "type": "object",
            "patternProperties": {
              "^[0-9a-zA-Z]+$": {
                "anyOf": [
                  {
                    "type": "object",
                    "$ref": "https://reindeer.tech/cds-schema/v1/marketTypeOfActor.json"
                  },
                  {
                    "type": "object",
                    "$ref": "https://reindeer.tech/cds-schema/v1/personsTypeOfActor.json"
                  },
                  {
                    "type": "object",
                    "$ref": "https://reindeer.tech/cds-schema/v1/externalSystemTypeOfActor.json"
                  },
                  {
                    "type": "object",
                    "$ref": "https://reindeer.tech/cds-schema/v1/refToActor.json"
                  }
                ]
              }
            },
            "additionalProperties": false
          },
          "resources": {
            "title": "Resources",
            "description": "REQUIRED. An array of resource objects, which is pointing to the external documents (files written by provisioning codes) describing the cloud computing architecture.",
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "https://reindeer.tech/cds-schema/v1/resource.json"
            },
            "additionalProperties": false
          },
          "contexts": {
            "title": "Contexts",
            "description": "REQUIRED. An array of context objects, which provide information about the relationship for achieving a specific purpose between actors and cloud computing resources.",
            "type": "object",
            "patternProperties": {
              "^[0-9a-zA-Z]+$": {
                "anyOf": [
                  {
                    "type": "object",
                    "$ref": "https://reindeer.tech/cds-schema/v1/context.json"
                  },
                  {
                    "type": "object",
                    "$ref": "https://reindeer.tech/cds-schema/v1/refToContext.json"
                  }
                ]
              }
            },
            "additionalProperties": false
          },
          "components": {
            "title": "Component objects",
            "description": "Holds a set of reusable objects for different aspects of the CDS. All objects defined within the components object will have no effect on the Cloud Design unless they are explicitly referenced from properties outside the components object.",
            "type": "object",
            "properties": {
              "actors": {
                "title": "Actor objects",
                "description": "An object to hold reusable Actor object.",
                "type": "object",
                "patternProperties": {
                  "^[0-9a-zA-Z]+$": {
                    "anyOf": [
                      {
                        "type": "object",
                        "$ref": "https://reindeer.tech/cds-schema/v1/marketTypeOfActor.json"
                      },
                      {
                        "type": "object",
                        "$ref": "https://reindeer.tech/cds-schema/v1/personsTypeOfActor.json"
                      },
                      {
                        "type": "object",
                        "$ref": "https://reindeer.tech/cds-schema/v1/externalSystemTypeOfActor.json"
                      }
                    ]
                  }
                },
                "additionalProperties": false
              },
              "contexts": {
                "title": "Context objects",
                "description": "An object to hold reusable Context object.",
                "type": "object",
                "patternProperties": {
                  "^[0-9a-zA-Z]+$": {
                    "type": "object",
                    "oneOf": [
                      {
                        "type": "object",
                        "$ref": "https://reindeer.tech/cds-schema/v1/context.json"
                      }
                    ]
                  }
                },
                "additionalProperties": false
              },
              "markets": {
                "title": "Market objects",
                "description": "An object to hold reusable Market object.",
                "type": "object",
                "patternProperties": {
                  "^[0-9a-zA-Z]+$": {
                    "type": "object",
                    "oneOf": [
                      {
                        "type": "object",
                        "$ref": "https://reindeer.tech/cds-schema/v1/market.json"
                      }
                    ]
                  }
                },
                "additionalProperties": false
              },
              "triggers": {
                "title": "Trigger objects",
                "description": "An object to hold reusable Trigger object.",
                "oneOf":[
                  {"type": "object"},
                  {"type": "array"}
                ],
                "patternProperties": {
                  "^[0-9a-zA-Z]+$": {
                    "type": "object",
                    "oneOf": [
                      {
                        "type": "object",
                        "$ref": "https://reindeer.tech/cds-schema/v1/webAccessTypeOfTrigger.json"
                      },
                      {
                        "type": "object",
                        "$ref": "https://reindeer.tech/cds-schema/v1/timedActionTypeOfTrigger.json"
                      }
                    ]
                  }
                },
                "additionalProperties": false
              },
              "traffics": {
                "title": "Traffic objects",
                "description": "An object to hold reusable Traffic object.",
                "type": "object",
                "patternProperties": {
                  "^[0-9a-zA-Z]+$": {
                    "oneOf": [
                      {
                        "type": "object",
                        "$ref": "https://reindeer.tech/cds-schema/v1/passThroughRatioTypeOfTraffic.json"
                      }
                    ]
                  }
                },
                "additionalProperties": false
              },
              "infoTypes": {
                "title": "Information type objects",
                "description": "An object to hold reusable Information type object.",
                "type": "object",
                "patternProperties": {
                  "^[0-9a-zA-Z]+$": {
                    "type": "object",
                    "$ref": "https://reindeer.tech/cds-schema/v1/infoType.json"
                  }
                },
                "additionalProperties": false
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    },
    {
      "uri": "https://reindeer.tech/cds-schema/v1/info.json",
      "schema": {
        "title": "Info object",
        "description": "The object provides metadata about the CDS. The metadata SHOULD be filled properly for helping others easy to search and find the CDS.",
        "type": "object",
        "required": [
          "version",
          "license",
          "title",
          "description",
          "status",
          "designedAt",
          "authors"
        ],
        "properties": {
          "version": {
            "title": "CDS's version number",
            "description": "REQUIRED. The version of the CDS defined by your willing (which is distinct from the CDS version).",
            "default": "1.0.0",
            "type": "string"
          },
          "license": {
            "title": "License of this CDS",
            "description": "REQUIRED. The license information of the CDS.",
            "type": "object",
            "$ref": "https://reindeer.tech/cds-schema/v1/license.json"
          },
          "title": {
            "title": "Title of the service",
            "description": "REQUIRED. The key MUST be 2 letter language code of ISO 639-1. And the value MUST be within 150 letters string of UTF-8. The title of the service, adopting this cloud design.",
            "type": "object",
            "$ref": "https://reindeer.tech/cds-schema/v1/title.json"
          },
          "description": {
            "title": "Description of the service",
            "description": "REQUIRED. The key MUST be 2 letter language code of ISO 639-1. And the value MUST be within 255 letters string of UTF-8. The description of the service, adopting this cloud design. It SHOULD be the concise memo including every keyword of the purpose and functions of the system. This text MAY be used as the search index by external tools.",
            "type": "object",
            "$ref": "https://reindeer.tech/cds-schema/v1/description.json"
          },
          "status": {
            "title": "The status of the CDS",
            "description": "REQUIRED. The status of the CDS. Valid values are idea, draft, production.\nidea: Just an idea.\ndraft: Under designing.\nproduction: Used by an actual service. Or expected to have production quality.",
            "type": "string",
            "enum": [
              "idea",
              "draft",
              "production"
            ]
          },
          "designedAt": {
            "title": "Designed time",
            "description": "REQUIRED. The time when the CDS was designed at. It MUST be the UNIXTIME format.",
            "type": "integer",
            "minimum": 1
          },
          "authors": {
            "title": "Authors",
            "description": "REQUIRED. The authors of the CDS. This information MAY be used by external tools as the important evidence of involved person's skill and experience.",
            "type": "object",
            "patternProperties": {
              "^[0-9a-zA-Z]+$": {
                "type": "object",
                "$ref": "https://reindeer.tech/cds-schema/v1/author.json"
              }
            },
            "additionalProperties": false
          },
          "organizations": {
            "title": "Organizations",
            "description": "Related organizations of the CDS. This information MAY be used by external tools as the important evidence of involved organization's skill and experience.",
            "type": "object",
            "patternProperties": {
              "^[0-9a-zA-Z]+$": {
                "type": "object",
                "$ref": "https://reindeer.tech/cds-schema/v1/organization.json"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    },
    {
      "uri": "https://reindeer.tech/cds-schema/v1/marketTypeOfActor.json",
      "schema": {
        "title": "Market type of actor object",
        "description": "This object provides information about an unspecified number of users, such as consumers and spectators belonging to a particular market. It is the kind of actor you SHOULD use, for example, when designing a limited network connection with an identifiable individual and cloud computing. The correct number SHOULD be provided in order to understand the number of users and the number of requests to be provided to the system.",
        "type": "object",
        "required": [
          "type",
          "title",
          "description",
          "market",
          "marketShare",
          "sourceIdentification"
        ],
        "properties": {
          "type": {
            "title": "Type of actor",
            "description": "REQUIRED. Fixed value, 'market'.",
            "type": "string",
            "enum": [
              "market"
            ]
          },
          "title": {
            "title": "The title of the actor",
            "description": "REQUIRED. The key MUST be 2 letter language code of ISO 639-1. And the value MUST be within 150 letters string of UTF-8. The title of the actor.",
            "type": "object",
            "$ref": "https://reindeer.tech/cds-schema/v1/title.json"
          },
          "description": {
            "title": "The description of the actor",
            "description": "REQUIRED. The key MUST be 2 letter language code of ISO 639-1. And the value MUST be within 255 letters string of UTF-8. The description of the actor.",
            "type": "object",
            "$ref": "https://reindeer.tech/cds-schema/v1/description.json"
          },
          "market": {
            "title": "Market object",
            "description": "REQUIRED. Market information to which this actor belongs.",
            "type": "object",
            "oneOf": [
              {
                "type": "object",
                "$ref": "https://reindeer.tech/cds-schema/v1/market.json"
              },
              {
                "type": "object",
                "$ref": "https://reindeer.tech/cds-schema/v1/refToMarket.json"
              }
            ]
          },
          "marketShare": {
            "title": "Market share",
            "description": "REQUIRED. The share ratio of this actor among the belonging market. For example, 0.3 means 30%.",
            "type": "number",
            "minimum": 0,
            "maximum": 1
          },
          "sourceIdentification": {
            "title": "IP, Domain or the other identification",
            "description": "REQUIRED. Whether specific IP address range or domains is assigned or not. If true, identificationGroup property is required.",
            "type": "boolean"
          },
          "identificationGroup": {
            "title": "The group name of IP address range, domains and so on.",
            "description": "The group name of IP address range, domains and so on.. Required when sourceIdentification propery is true. And MUST NOT use when sourceIdentification propery is false.",
            "type": "string",
            "$ref": "https://reindeer.tech/cds-schema/v1/ip.json"
          }
        },
        "dependencies": {
          "identificationGroup": {
            "properties": {
              "sourceIdentification": {
                "enum": [
                  true
                ]
              }
            }
          }
        },
        "additionalProperties": false
      }
    },
    {
      "uri": "https://reindeer.tech/cds-schema/v1/personsTypeOfActor.json",
      "schema": {
        "title": "Persons type of actor object",
        "description": "The object provides information about a type of actor being consisted of one or a few persons like system operator. The kind of actor you SHOULD use, for example, when designing a limited network connection between an identifiable external system and cloud computing.",
        "type": "object",
        "required": [
          "type",
          "title",
          "description",
          "num",
          "sourceIdentification"
        ],
        "properties": {
          "type": {
            "title": "Type of actor",
            "description": "REQUIRED. Fixed value, 'persons'.",
            "type": "string",
            "enum": [
              "persons"
            ]
          },
          "title": {
            "title": "The title of the group of persons",
            "description": "REQUIRED. The key MUST be 2 letter language code of ISO 639-1. And the value MUST be within 150 letters string of UTF-8.",
            "type": "object",
            "$ref": "https://reindeer.tech/cds-schema/v1/title.json"
          },
          "description": {
            "title": "The description of the actor",
            "description": "REQUIRED. The key MUST be 2 letter language code of ISO 639-1. And the value MUST be within 255 letters string of UTF-8. ",
            "type": "object",
            "$ref": "https://reindeer.tech/cds-schema/v1/description.json"
          },
          "num": {
            "title": "The number of members",
            "description": "REQUIRED. The number of members.",
            "type": "integer",
            "minimum": 1
          },
          "sourceIdentification": {
            "title": "IP, Domain or the other identification",
            "description": "REQUIRED. Whether specific IP address range or domains is assigned or not. If true, identificationGroup property is required.",
            "type": "boolean"
          },
          "identificationGroup": {
            "title": "The group name of IP address range, domains and so on.",
            "description": "The group name of IP address range, domains and so on. Required when sourceIdentification propery is true. And MUST NOT use when sourceIdentification propery is false.",
            "type": "string",
            "$ref": "https://reindeer.tech/cds-schema/v1/ip.json"
          }
        },
        "dependencies": {
          "identificationGroup": {
            "properties": {
              "sourceIdentification": {
                "enum": [
                  true
                ]
              }
            }
          }
        },
        "additionalProperties": false
      }
    },
    {
      "uri": "https://reindeer.tech/cds-schema/v1/externalSystemTypeOfActor.json",
      "schema": {
        "title": "External system type of actor object",
        "description": "The object provides information about a type of actor being consisted of one or a few systems like external API, FILE interface and so on. The kind of actor you SHOULD use, for example, when designing a limited network connection between an identifiable external system and cloud computing.",
        "type": "object",
        "required": [
          "type",
          "title",
          "description",
          "sourceIdentification"
        ],
        "properties": {
          "type": {
            "title": "Type of actor",
            "description": "REQUIRED. Fixed value, 'externalSystem'.",
            "type": "string",
            "enum": [
              "externalSystem"
            ]
          },
          "title": {
            "title": "The title of the external system interface",
            "description": "REQUIRED. The key MUST be 2 letter language code of ISO 639-1. And the value MUST be within 150 letters string of UTF-8. The title of the external system interface.",
            "type": "object",
            "$ref": "https://reindeer.tech/cds-schema/v1/title.json"
          },
          "description": {
            "title": "The description of the actor",
            "description": "REQUIRED. The key MUST be 2 letter language code of ISO 639-1. And the value MUST be within 255 letters string of UTF-8. The description of the external system interface.",
            "type": "object",
            "$ref": "https://reindeer.tech/cds-schema/v1/description.json"
          },
          "sourceIdentification": {
            "title": "IP, Domain or the other identification",
            "description": "REQUIRED. Whether specific IP address range or domains is assigned or not. If true, identificationGroup property is required.",
            "type": "boolean"
          },
          "identificationGroup": {
            "title": "The group name of IP address range, domains and so on.",
            "description": "The group name of IP address range, domains and so on.. Required when sourceIdentification propery is true. And MUST NOT use when sourceIdentification propery is false.",
            "type": "string",
            "$ref": "https://reindeer.tech/cds-schema/v1/ip.json"
          }
        },
        "dependencies": {
          "identificationGroup": {
            "properties": {
              "sourceIdentification": {
                "enum": [
                  true
                ]
              }
            }
          }
        },
        "additionalProperties": false
      }
    },
    {
      "uri": "https://reindeer.tech/cds-schema/v1/resource.json",
      "schema": {
        "title": "Resource object",
        "description": "The object provides information about cloud computing resources used by this system. It MUST be references of the external file formatted by JSON or YAML. And it SHOULD be well-formatted data for cloud automation tools like below.\nAWS CloudFormation\nAzure Resource Manager\nGoogle Cloud Deployment Manager\nAlibaba Cloud Resource Orchestration Service\nTerraform",
        "type": "object",
        "required": [
          "type",
          "$ref"
        ],
        "properties": {
          "type": {
            "title": "Language type",
            "description": "REQUIRED. Type of the cloud automation language. It MUST be one of the following values. \nacf : AWS CloudFormation. \narm : Azure Resource Manager. \ngdm : Google Cloud Deployment Manager. \naro : Alicloud Resource Orchestration Service. \ntfm: Terraform. \nslf: ServerlessFramework. \noth : Others.",
            "type": "string",
            "enum": [
              "acf",
              "arm",
              "gdm",
              "aro",
              "tfm",
              "slf",
              "oth"
            ]
          },
          "$ref": {
            "title": "Reference",
            "description": "REQUIRED. Reference to the file written by cloud automation language. Same as the $ref item of Reference object. This MUST point to the external file with extension, .json, .yaml, or .yml. And the extension SHOULD be used by external tools to detect the file format of the link.",
            "type": "string",
            "default": "externalFile.json",
            "pattern": "^[a-zA-Z0-9_.\\-]+\\.(yaml|yml|json)$"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "uri": "https://reindeer.tech/cds-schema/v1/context.json",
      "schema": {
        "title": "Context object",
        "description": "The object provides information about the use case of the system by associating some actors and resources by the purpose of running the specific function. It SHOULD be comprehensive for designing and auditing the CDS correctly.",
        "type": "object",
        "required": [
          "title",
          "description",
          "trigger",
          "traffics"
        ],
        "properties": {
          "title": {
            "title": "The title of the context",
            "description": "REQUIRED. The key MUST be 2 letter language code of ISO 639-1. And the value MUST be within 150 letters string of UTF-8. The title of the context.",
            "type": "object",
            "$ref": "https://reindeer.tech/cds-schema/v1/title.json"
          },
          "description": {
            "title": "The description of the context",
            "description": "REQUIRED. The key MUST be 2 letter language code of ISO 639-1. And the value MUST be within 255 letters string of UTF-8. The description of the context.",
            "type": "object",
            "$ref": "https://reindeer.tech/cds-schema/v1/description.json"
          },
          "trigger": {
            "title": "Trigger of the context",
            "description": "REQUIRED. One of the types of trigger object. The trigger means the initial event of this context.",
            "type": "object",
            "oneOf": [
              {
                "type": "object",
                "$ref": "https://reindeer.tech/cds-schema/v1/webAccessTypeOfTrigger.json"
              },
              {
                "type": "object",
                "$ref": "https://reindeer.tech/cds-schema/v1/timedActionTypeOfTrigger.json"
              },
              {
                "type": "object",
                "$ref": "https://reindeer.tech/cds-schema/v1/refToTrigger.json"
              }
            ]
          },
          "traffics": {
            "title": "Traffics of the context",
            "description": "REQUIRED. Holding the list of traffic objects. Each traffic is one of the types of traffic objects. The traffic means related data transfer route within the context.",
            "type": "object",
            "patternProperties": {
              "^[0-9a-zA-Z]+$": {
                "anyOf": [
                  {
                    "type": "object",
                    "$ref": "https://reindeer.tech/cds-schema/v1/passThroughRatioTypeOfTraffic.json"
                  },
                  {
                    "type": "object",
                    "$ref": "https://reindeer.tech/cds-schema/v1/refToTraffic.json"
                  }
                ]
              }
            },
            "additionalProperties": false
          },
          "maxPerformanceDurationRatio": {
            "title": "Monthly duration ratio of maximum performance",
            "description": "When calculating the cost required for the context, this value is used to synthesize the max and min values ​​of each Range values ​​object included in trigger and traffic. For example, in the case of a design that improves DAU by advertising effect only 3 days a month, the DAU value is expressed as min: 0.01, max: 0.1, and this value is expressed as 0.1. CloudDesign expresses performance and cost based on monthly usage, but with this value, it is possible to record a design that expects a maximum instantaneous performance of 100 rps while the monthly average is 1 rps.",
            "type": "number",
            "minimum": 0,
            "maximum": 1
          }
        },
        "additionalProperties": false
      }
    },
    {
      "uri": "https://reindeer.tech/cds-schema/v1/license.json",
      "schema": {
        "title": "License object",
        "description": "License information for the CDS.",
        "type": "object",
        "required": [
          "type"
        ],
        "if": { "properties":{ "type": { "enum":["Closed","OtherOpen"] }}},
        "then": { "required":["provider"]},
        "properties": {
          "type": {
            "title": "The license type of the CDS",
            "description": "REQUIRED. This is the CDS license type. MUST be one of the following values: (CC0 recommended): CC0 Apache-2.0 MIT BSD-2-Clause OtherOpen Closed",
            "type": "string",
            "default": "CC0",
            "enum": [
              "CC0",
              "Apache-2.0",
              "MIT",
              "BSD-2-Clause",
              "OtherOpen",
              "Closed"
            ]
          },
          "provider": {
            "title": "Optional. The license provider or license name",
            "description": "The license provider or license name. You MUST not use this parameter when the type is not OtherOpen and Closed.",
            "type": "string"
          }
        },
        "additionalProperties": false
      }
    },
    {
      "uri": "https://reindeer.tech/cds-schema/v1/author.json",
      "schema": {
        "title": "Author object",
        "description": "The object provides information about authors and their roles on the CDS. It SHOULD be comprehensive for helping others find the person who has correct knowledge about the system, the cloud computing technology, and the market the system is serving.",
        "type": "object",
        "required": [
          "roles",
          "joinedAt"
        ],
        "properties": {
          "roles": {
            "title": "Roles of author",
            "description": "REQUIRED. Holds a set of roles related to the CDS. Each role MUST be one of below strings. \nplanner: Planing the cloud computing adoption. \ndesigner: Design the cloud computing architecture. \nauditor: Audit the CDS. \noperator: Operating the system designed by CDS. \nothers: Other role.",
            "type": "array",
            "items": {
              "type": "string",
              "enum": [
                "planner",
                "designer",
                "auditor",
                "operator",
                "others"
              ]
            }
          },
          "joinedAt": {
            "title": "Joined time",
            "description": "REQUIRED. The time when the author was joined at this CDS creation / operation. It MUST be the UNIXTIME format.",
            "type": "integer",
            "minimum": 1
          },
          "leavedAt": {
            "title": "Leaved time",
            "description": "REQUIRED. The time when the author was leaved at this CDS creation / operation. It MUST be the UNIXTIME format.",
            "type": "integer",
            "minimum": 1
          },
          "sign": {
            "title": "Sign",
            "description": "Sign of the author. This value should be automatically generated by the signature support tool and is usually blank.",
            "type": "string",
            "minimum": 1
          }
        },
        "additionalProperties": false
      }
    },
    {
      "uri": "https://reindeer.tech/cds-schema/v1/organization.json",
      "schema": {
        "title": "Organization object",
        "description": "The object provides information about organizations related to the CDS. It SHOULD be comprehensive for helping others find the organization who has correct knowledge about the system, the cloud computing technology, and the market the system is serving.",
        "type": "object",
        "required": [
          "joinedAt"
        ],
        "properties": {
          "joinedAt": {
            "title": "Joined time",
            "description": "REQUIRED. The time when the organization was joined at this CDS creation / operation. It MUST be the UNIXTIME format.",
            "type": "integer",
            "minimum": 1
          },
          "leavedAt": {
            "title": "Leaved time",
            "description": "REQUIRED. The time when the organization was leaved at this CDS creation / operation. It MUST be the UNIXTIME format.",
            "type": "integer",
            "minimum": 1
          },
          "sign": {
            "title": "Sign",
            "description": "Sign of the organization. This value should be automatically generated by the signature support tool and is usually blank.",
            "type": "string",
            "minimum": 1
          }
        },
        "additionalProperties": false
      }
    },
    {
      "uri": "https://reindeer.tech/cds-schema/v1/market.json",
      "schema": {
        "title": "Market object",
        "description": "The object provides information about the market. It MAY be including the result of your research or third party's survey.",
        "type": "object",
        "required": [
          "title",
          "description",
          "num",
          "estimatedBy",
          "estimatedAt"
        ],
        "properties": {
          "title": {
            "title": "Title of the market",
            "description": "REQUIRED. The key MUST be 2 letter language code of ISO 639-1. And the value MUST be within 150 letters string of UTF-8. The content SHOULD be unique on this CDS by including the words describing a member's properties, interest, estimated year and so on.",
            "type": "object",
            "$ref": "https://reindeer.tech/cds-schema/v1/title.json"
          },
          "description": {
            "title": "Description of the market",
            "description": "REQUIRED. The key MUST be 2 letter language code of ISO 639-1. And the value MUST be within 255 letters string of UTF-8. The description of the market. It SHOULD be including the words describing the author, estimation purpose and so on. This text MAY help the designer's decision whether this information can be reused by other design or not.",
            "type": "object",
            "$ref": "https://reindeer.tech/cds-schema/v1/description.json"
          },
          "num": {
            "title": "Number of members of the market",
            "description": "REQUIRED. The number of members.",
            "type": "integer",
            "minimum": 1
          },
          "estimatedBy": {
            "title": "The author of this estimation",
            "description": "REQUIRED. The author of this estimation.",
            "type": "string"
          },
          "estimatedAt": {
            "title": "The date of estimation",
            "description": "REQUIRED. The time when it was estimated at. It MUST be the UNIXTIME format.",
            "type": "integer",
            "minimum": 1
          },
          "additionalProperties": false
        }
      }
    },
    {
      "uri": "https://reindeer.tech/cds-schema/v1/infoType.json",
      "schema": {
        "title": "InfoType object",
        "description": "The objects represent the information's type and required security level. You SHOULD define the information types and classify the information received, stored, treated at the cloud computing resources.",
        "type": "object",
        "required": [
          "title",
          "description",
          "confidential",
          "privacy",
          "definedBy",
          "definedAt"
        ],
        "properties": {
          "title": {
            "title": "Title",
            "description": "REQUIRED. The key MUST be 2 letter language code of ISO 639-1. And the value MUST be within 150 letters string of UTF-8. The name of the information type.",
            "type": "object",
            "$ref": "https://reindeer.tech/cds-schema/v1/title.json"
          },
          "description": {
            "title": "Description",
            "description": "REQUIRED. The key MUST be 2 letter language code of ISO 639-1. And the value MUST be within 255 letters string of UTF-8. Describing classification detail.",
            "type": "object",
            "$ref": "https://reindeer.tech/cds-schema/v1/description.json"
          },
          "confidential": {
            "title": "confidential flag",
            "description": "REQUIRED. Confidential information or not.",
            "type": "boolean"
          },
          "privacy": {
            "title": "privacy flag",
            "description": "REQUIRED. Privacy information or not. It means the information is needed to be protected as legally.",
            "type": "boolean"
          },
          "definedBy": {
            "title": "The author of this infotype",
            "description": "REQUIRED. The author of this definition.",
            "type": "string"
          },
          "definedAt": {
            "title": "The date of the definition",
            "description": "REQUIRED. The time when it was defined at. It MUST be the UNIXTIME format.",
            "type": "integer",
            "minimum": 1
          },
          "additionalProperties": false
        }
      }
    },
    {
      "uri": "https://reindeer.tech/cds-schema/v1/title.json",
      "schema": {
        "type": "object",
        "patternProperties": {
          "^[a-z]{2}$": {
            "type": "string",
            "minLength": 1,
            "maxLength": 150
          }
        },
        "additionalProperties": false
      }
    },
    {
      "uri": "https://reindeer.tech/cds-schema/v1/description.json",
      "schema": {
        "type": "object",
        "patternProperties": {
          "^[a-z]{2}$": {
            "type": "string",
            "maxLength": 255
          }
        },
        "additionalProperties": false
      }
    },
    {
      "uri": "https://reindeer.tech/cds-schema/v1/ip.json",
      "schema": {
        "type": "string",
        "pattern": "^[a-zA-Z0-9_.\\-]+$"
      }
    },
    {
      "uri": "https://reindeer.tech/cds-schema/v1/refToActor.json",
      "schema": {
        "title": "Reference",
        "description": "This is a reference specification object used when referencing JSON/YAML objects in files for CDS or Cloud Automation Tools from various fields of CDS. Reference objects are defined by JSON references and follow the same structure, behavior, and rules. In this specification, reference resolution is done as defined in the JSON Reference Specification, not the JSON Schema Specification.",
        "type": "object",
        "required": [
          "$ref"
        ],
        "properties": {
          "$ref": {
            "title": "Reference",
            "description": "REQUIRED. Reference strings. In the case of referencing the object in the same file, you MUST start with #/, and MUST always describe the path from the root object. When specifying a reference to the external file, you MUST start with the file name with the extension .json, .yaml or .yml. After that, you MUST describe the same as in the same file reference.",
            "type": "string",
            "pattern": "^([a-zA-Z0-9]+.+(yaml|yml|json)+#|#)+(/components/actors|/actors)+/[a-zA-Z0-9]+$"
          }
        }
      }
    },
    {
      "uri": "https://reindeer.tech/cds-schema/v1/refToResources.json",
      "schema": {
        "title": "Reference",
        "description": "This is a reference specification object used when referencing JSON/YAML objects in files for CDS or Cloud Automation Tools from various fields of CDS. Reference objects are defined by JSON references and follow the same structure, behavior, and rules. In this specification, reference resolution is done as defined in the JSON Reference Specification, not the JSON Schema Specification.",
        "type": "object",
        "required": [
          "$ref"
        ],
        "properties": {
          "$ref": {
            "title": "Reference",
            "description": "REQUIRED. Reference strings. In the case of referencing the object in the same file, you MUST start with #/, and MUST always describe the path from the root object. When specifying a reference to the external file, you MUST start with the file name with the extension .json, .yaml or .yml. After that, you MUST describe the same as in the same file reference.",
            "type": "string",
            "pattern": "^([a-zA-Z0-9]+.+(yaml|yml|json)+#|#)+/+.+$"
          }
        }
      }
    },
    {
      "uri": "https://reindeer.tech/cds-schema/v1/refToContext.json",
      "schema": {
        "title": "Reference",
        "description": "This is a reference specification object used when referencing JSON/YAML objects in files for CDS or Cloud Automation Tools from various fields of CDS. Reference objects are defined by JSON references and follow the same structure, behavior, and rules. In this specification, reference resolution is done as defined in the JSON Reference Specification, not the JSON Schema Specification.",
        "type": "object",
        "required": [
          "$ref"
        ],
        "properties": {
          "$ref": {
            "title": "Reference",
            "description": "REQUIRED. Reference strings. In the case of referencing the object in the same file, you MUST start with #/, and MUST always describe the path from the root object. When specifying a reference to the external file, you MUST start with the file name with the extension .json, .yaml or .yml. After that, you MUST describe the same as in the same file reference.",
            "type": "string",
            "pattern": "^([a-zA-Z0-9]+.+(yaml|yml|json)+#|#)+/components/contexts/[a-zA-Z0-9]+$"
          }
        }
      }
    },
    {
      "uri": "https://reindeer.tech/cds-schema/v1/refToTrigger.json",
      "schema": {
        "title": "Reference",
        "description": "This is a reference specification object used when referencing JSON/YAML objects in files for CDS or Cloud Automation Tools from various fields of CDS. Reference objects are defined by JSON references and follow the same structure, behavior, and rules. In this specification, reference resolution is done as defined in the JSON Reference Specification, not the JSON Schema Specification.",
        "type": "object",
        "required": [
          "$ref"
        ],
        "properties": {
          "$ref": {
            "title": "Reference",
            "description": "REQUIRED. Reference strings. In the case of referencing the object in the same file, you MUST start with #/, and MUST always describe the path from the root object. When specifying a reference to the external file, you MUST start with the file name with the extension .json, .yaml or .yml. After that, you MUST describe the same as in the same file reference.",
            "type": "string",
            "pattern": "^([a-zA-Z0-9]+.+(yaml|yml|json)+#|#)+(/components/triggers/+([a-zA-Z0-9])|/contexts/+([a-zA-Z0-9])+/trigger)+$"
          }
        }
      }
    },
    {
      "uri": "https://reindeer.tech/cds-schema/v1/refToTraffic.json",
      "schema": {
        "title": "Reference",
        "description": "This is a reference specification object used when referencing JSON/YAML objects in files for CDS or Cloud Automation Tools from various fields of CDS. Reference objects are defined by JSON references and follow the same structure, behavior, and rules. In this specification, reference resolution is done as defined in the JSON Reference Specification, not the JSON Schema Specification.",
        "type": "object",
        "required": [
          "$ref"
        ],
        "properties": {
          "$ref": {
            "title": "Reference",
            "description": "REQUIRED. Reference strings. In the case of referencing the object in the same file, you MUST start with #/, and MUST always describe the path from the root object. When specifying a reference to the external file, you MUST start with the file name with the extension .json, .yaml or .yml. After that, you MUST describe the same as in the same file reference.",
            "type": "string",
            "pattern": "^([a-zA-Z0-9]+.+(yaml|yml|json)+#|#)+(/components/traffics|/contexts/+([a-zA-Z0-9])+/traffics)+/[a-zA-Z0-9]+$"
          }
        }
      }
    },
    {
      "uri": "https://reindeer.tech/cds-schema/v1/refToInfoType.json",
      "schema": {
        "title": "Reference",
        "description": "This is a reference specification object used when referencing JSON/YAML objects in files for CDS or Cloud Automation Tools from various fields of CDS. Reference objects are defined by JSON references and follow the same structure, behavior, and rules. In this specification, reference resolution is done as defined in the JSON Reference Specification, not the JSON Schema Specification.",
        "type": "object",
        "required": [
          "$ref"
        ],
        "properties": {
          "$ref": {
            "title": "Reference",
            "description": "REQUIRED. Reference strings. In the case of referencing the object in the same file, you MUST start with #/, and MUST always describe the path from the root object. When specifying a reference to the external file, you MUST start with the file name with the extension .json, .yaml or .yml. After that, you MUST describe the same as in the same file reference.",
            "type": "string",
            "pattern": "^([a-zA-Z0-9]+.+(yaml|yml|json)+#|#)+/components/infoTypes/[a-zA-Z0-9]+$"
          }
        }
      }
    },
    {
      "uri": "https://reindeer.tech/cds-schema/v1/refToMarket.json",
      "schema": {
        "title": "Reference",
        "description": "This is a reference specification object used when referencing JSON/YAML objects in files for CDS or Cloud Automation Tools from various fields of CDS. Reference objects are defined by JSON references and follow the same structure, behavior, and rules. In this specification, reference resolution is done as defined in the JSON Reference Specification, not the JSON Schema Specification.",
        "type": "object",
        "required": [
          "$ref"
        ],
        "properties": {
          "$ref": {
            "title": "Reference",
            "description": "REQUIRED. Reference strings. In the case of referencing the object in the same file, you MUST start with #/, and MUST always describe the path from the root object. When specifying a reference to the external file, you MUST start with the file name with the extension .json, .yaml or .yml. After that, you MUST describe the same as in the same file reference.",
            "type": "string",
            "pattern": "^([a-zA-Z0-9]+.+(yaml|yml|json)+#|#)+/components/markets/[a-zA-Z0-9]+$"
          }
        }
      }
    },
    {
      "uri": "https://reindeer.tech/cds-schema/v1/webAccessTypeOfTrigger.json",
      "schema": {
        "title": "Web access type of trigger object",
        "description": "This is a kind of trigger by actors. Describing the actor's web access to cloud computing resources. The actor MAY be human, or external computing.",
        "type": "object",
        "required": [
          "type",
          "description",
          "infoType",
          "ports",
          "internet",
          "restriction",
          "dau",
          "pagesVisit",
          "kbPage",
          "reqPage",
          "busyHours",
          "postsVisit",
          "kbPost",
          "start",
          "end",
          "endpointTitle",
          "storedRatio"
        ],
        "properties": {
          "type": {
            "title": "Type of this trigger",
            "description": "REQUIRED. Fixed value, 'webAccess'.",
            "type": "string",
            "enum": [
              "webAccess"
            ]
          },
          "description": {
            "title": "Description of trigger",
            "description": "REQUIRED. The key MUST be 2 letter language code of ISO 639-1. And the value MUST be within 255 letters string of UTF-8. The description of the trigger. It SHOULD be the concise memo describing the purpose of this trigger.",
            "$ref": "https://reindeer.tech/cds-schema/v1/description.json"
          },
          "infoType": {
            "title": "Information type",
            "description": "REQUIRED. Reference to the InfoType object. Indicates the type of information handled in this trigger.",
            "oneOf": [
              {
                "type": "object",
                "$ref": "https://reindeer.tech/cds-schema/v1/infoType.json"
              },
              {
                "type": "object",
                "$ref": "https://reindeer.tech/cds-schema/v1/refToInfoType.json"
              }
            ]
          },
          "ports": {
            "title": "Ports",
            "description": "REQUIRED. Port numbers required at the end points (defined at the end field) of this trigger.",
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "internet": {
            "title": "Internet usage",
            "description": "REQUIRED. Use internet or not for this trigger.",
            "type": "boolean"
          },
          "restriction": {
            "title": "Restricted by IP range, domain or the others",
            "description": "REQUIRED. Source IP, Domain or the other restriction at the end points of this trigger.",
            "type": "boolean"
          },
          "dau": {
            "title": "Daily Active User ratio",
            "description": "REQUIRED. Daily Active User ratio. For example, it will be 0.01 in case of that avarage 1 percent of actors, referred at this start field, will access to the resources, referred at this end field, per day.",
            "$ref": "https://reindeer.tech/cds-schema/v1/rangeValue.json"
          },
          "pagesVisit": {
            "title": "Page numbers per visit",
            "description": "REQUIRED. Average page numbers per visit. Representing how many pages visitors will open per visit.",
            "$ref": "https://reindeer.tech/cds-schema/v1/rangeValue.json"
          },
          "kbPage": {
            "title": "Page size (KB)",
            "description": "REQUIRED. Average page data size as a unit of KB.",
            "$ref": "https://reindeer.tech/cds-schema/v1/rangeValue.json"
          },
          "reqPage": {
            "title": "Request number per page",
            "description": "REQUIRED. Average request numbers per page. Representing how many requests (Requests to images and HTML etc. that make up the page) will be used per page.",
            "$ref": "https://reindeer.tech/cds-schema/v1/rangeValue.json"
          },
          "busyHours": {
            "title": "Busy hours within a day",
            "description": "REQUIRED. Busy hours per day. For example, it's 6, in the case of that most access is concentrated amoung AM 9:00 - AM 11:00 and PM 17:00 - PM 19:00 per day.",
            "$ref": "https://reindeer.tech/cds-schema/v1/rangeValue.json"
          },
          "postsVisit": {
            "title": "POST numbers per visit",
            "description": "REQUIRED. Representing what percentage of the visitors will POST. For example, it's 0.1 in case of that 100 POST will sent per day among 100,000 actors and 0.01 dau.",
            "$ref": "https://reindeer.tech/cds-schema/v1/rangeValue.json"
          },
          "kbPost": {
            "title": "Post size (KB)",
            "description": "REQUIRED. Average POST data size as a unit of KB.",
            "$ref": "https://reindeer.tech/cds-schema/v1/rangeValue.json"
          },
          "start": {
            "title": "The start point of this trigger",
            "description": "REQUIRED. It MUST be a reference to the actor objects. The start point of this trigger.",
            "oneOf": [
              {
                "type": "object",
                "$ref": "https://reindeer.tech/cds-schema/v1/refToActor.json"
              }
            ]
          },
          "end": {
            "title": "The end point of this traffic",
            "description": "REQUIRED. It MUST be references to the each resource item described in the resource object. The end point of this traffic.",
            "type": "array",
            "items": {
              "type": "object",
              "$ref": "https://reindeer.tech/cds-schema/v1/refToResources.json"
            }
          },
          "endpointTitle": {
            "title": "The name of the endpoint",
            "description": "REQUIRED. The key MUST be 2 letter language code of ISO 639-1. And the value MUST be within 150 letters string of UTF-8. The name of the endpoint.",
            "type": "object",
            "$ref": "https://reindeer.tech/cds-schema/v1/title.json"
          },
          "storedRatio": {
            "title": "Stored data size ratio",
            "description": "REQUIRED. The ratio of the end's stored data volume among the received data. For example, if this trigger's end stores all of the data that the actor sends to end, this value will be 1.0. And it's 0 if not stored.",
            "$ref": "https://reindeer.tech/cds-schema/v1/rangeValue.json"
          },
          "storedInfoType": {
            "title": "Information type of stored data",
            "description": "Reference to the InfoType object. Indicates the type of information stored at the ends of this trigger.",
            "oneOf": [
              {
                "type": "object",
                "$ref": "https://reindeer.tech/cds-schema/v1/infoType.json"
              },
              {
                "type": "object",
                "$ref": "https://reindeer.tech/cds-schema/v1/refToInfoType.json"
              }
            ]
          },
          "storageDescription": {
            "title": "Purpose of the storage",
            "description": "The key MUST be 2 letter language code of ISO 639-1. And the value MUST be within 255 letters string of UTF-8. The description of the endpoint. It SHOULD be the concise memo describing the purpose of storage of the ends in this trigger.",
            "$ref": "https://reindeer.tech/cds-schema/v1/description.json"
          },
          "additionalProperties": false
        }
      }
    },
    {
      "uri": "https://reindeer.tech/cds-schema/v1/timedActionTypeOfTrigger.json",
      "schema": {
        "title": "Timed action type of trigger object",
        "description": "This is a kind of trigger by actors or resources. Describing the timed action from actors or cloud computing resources to other ones.",
        "type": "object",
        "required": [
          "type",
          "description",
          "infoType",
          "ports",
          "internet",
          "restriction",
          "onlineRps",
          "reqMonth",
          "kbRequest",
          "kbResponse",
          "start",
          "end",
          "endpointTitle",
          "storedRatio"
        ],
        "properties": {
          "type": {
            "title": "Type",
            "description": "REQUIRED. Fixed value, 'timedAction'.",
            "type": "string",
            "enum": [
              "timedAction"
            ]
          },
          "description": {
            "title": "The description of the trigger",
            "description": "REQUIRED. The key MUST be 2 letter language code of ISO 639-1. And the value MUST be within 255 letters string of UTF-8. The description of the trigger. It SHOULD be the concise memo describing the purpose of this trigger.",
            "$ref": "https://reindeer.tech/cds-schema/v1/description.json"
          },
          "infoType": {
            "title": "Information type",
            "description": "REQUIRED. Reference to the InfoType object. Indicates the type of information handled in this trigger.",
            "oneOf": [
              {
                "type": "object",
                "$ref": "https://reindeer.tech/cds-schema/v1/infoType.json"
              },
              {
                "type": "object",
                "$ref": "https://reindeer.tech/cds-schema/v1/refToInfoType.json"
              }
            ]
          },
          "ports": {
            "title": "Ports",
            "description": "REQUIRED. Port numbers required at the end points of this trigger.",
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "internet": {
            "title": "Internet usage",
            "description": "REQUIRED. Whether use internet use or not for this connection.",
            "type": "boolean"
          },
          "restriction": {
            "title": "Restricted by IP range, domain or the others",
            "description": "REQUIRED. Source IP, Domain or the other restriction at the end points of this trigger.",
            "type": "boolean"
          },
          "onlineRps": {
            "title": "Requests per second",
            "description": "REQUIRED. Number of requests per second when this trigger fires. Specify the required performance from the start point (start field) to the end point (end field). For example, if the batch system runs every Monday morning and each batch accesses the external API with a throughput of 2 times per second it is 2.0.",
            "$ref": "https://reindeer.tech/cds-schema/v1/rangeValue.json"
          },
          "reqMonth": {
            "title": "Requests per month",
            "description": "REQUIRED. Monthly request numbers from the start point to the endpoints. For example, it's 9000 in case of that the batch system sends mail magazine 3 times to 1000 persons per month.",
            "$ref": "https://reindeer.tech/cds-schema/v1/rangeValue.json"
          },
          "kbRequest": {
            "title": "Request size (KB)",
            "description": "REQUIRED. Request data size per request from the start point to the end point as the unit of KB.",
            "$ref": "https://reindeer.tech/cds-schema/v1/rangeValue.json"
          },
          "kbResponse": {
            "title": "Response size (KB)",
            "description": "REQUIRED. Response data size per request from the start point to the end point as the unit of KB.",
            "$ref": "https://reindeer.tech/cds-schema/v1/rangeValue.json"
          },
          "start": {
            "title": "The start point of this trigger",
            "description": "REQUIRED. It MUST be a reference to the actor object or the resource object. The start point of this trigger.",
            "oneOf": [
              {
                "type": "object",
                "$ref": "https://reindeer.tech/cds-schema/v1/refToActor.json"
              },
              {
                "type": "object",
                "$ref": "https://reindeer.tech/cds-schema/v1/refToResources.json"
              }
            ]
          },
          "end": {
            "title": "The end point of this trigger",
            "description": "REQUIRED. It MUST be a reference to the actor object or the resource object. The end point of this traffic.",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "object",
                  "$ref": "https://reindeer.tech/cds-schema/v1/refToActor.json"
                },
                {
                  "type": "object",
                  "$ref": "https://reindeer.tech/cds-schema/v1/refToResources.json"
                }
              ]
            }
          },
          "endpointTitle": {
            "title": "The name of the endpoint",
            "description": "REQUIRED. The key MUST be 2 letter language code of ISO 639-1. And the value MUST be within 150 letters string of UTF-8. The name of the endpoint.",
            "type": "object",
            "$ref": "https://reindeer.tech/cds-schema/v1/title.json"
          },
          "storedRatio": {
            "title": "Stored data size ratio",
            "description": "REQUIRED. The ratio of the stored data volume among the received data to the ends. For example, it is 1.0 in case of that the database resource in this trigger is received 10GB/Month from the app server and store all of them to the database. When the ends don't store the traffic data, it's 0.",
            "$ref": "https://reindeer.tech/cds-schema/v1/rangeValue.json"
          },
          "storedInfoType": {
            "title": "Information type",
            "description": "Reference to the InfoType object. Indicates the type of information stored at the ends of this trigger.",
            "oneOf": [
              {
                "type": "object",
                "$ref": "https://reindeer.tech/cds-schema/v1/infoType.json"
              },
              {
                "type": "object",
                "$ref": "https://reindeer.tech/cds-schema/v1/refToInfoType.json"
              }
            ]
          },
          "storageDescription": {
            "title": "Purpose of the storage",
            "description": "The key MUST be 2 letter language code of ISO 639-1. And the value MUST be within 255 letters string of UTF-8. The description of the endpoint. It SHOULD be the concise memo describing the purpose of storage of the ends in this trigger.",
            "$ref": "https://reindeer.tech/cds-schema/v1/description.json"
          },
          "additionalProperties": false
        }
      }
    },
    {
      "uri": "https://reindeer.tech/cds-schema/v1/passThroughRatioTypeOfTraffic.json",
      "schema": {
        "title": "Pass through ratio type of traffic object",
        "description": "This is a kind of traffic object. It can represent traffic that occurs in the form of passing a part of the request received from the start point to the subsequent resources. For example, it can represent a chain of communication where a load balancer sends a received request to a web server, and an application generates a mail delivery queue based on the received request. At this time, the size of the data received by this traffic endpoint (end field) is the percentage of the request received by the previous communication (source field) of this traffic. Therefore, if you extend the data to 3 MB in the server and pass it to the end point of this traffic after the previous communication receives the 1 MB POST value, the data size can be expressed as 300% (passThroughReqRatio> field's value is 3).",
        "type": "object",
        "required": [
          "type",
          "description",
          "infoType",
          "ports",
          "internet",
          "restriction",
          "source",
          "end",
          "passThroughReqRatio",
          "compositResRatio",
          "endpointTitle",
          "storedRatio"
        ],
        "properties": {
          "type": {
            "title": "Type",
            "description": "REQUIRED. Fixed value, 'passThroughRatio'.",
            "type": "string",
            "enum": [
              "passThroughRatio"
            ]
          },
          "description": {
            "title": "The description of the traffic.",
            "description": "REQUIRED. The key MUST be 2 letter language code of ISO 639-1. And the value MUST be within 255 letters string of UTF-8. The description of the traffic. It SHOULD be the concise memo describing the purpose of this traffic.",
            "$ref": "https://reindeer.tech/cds-schema/v1/description.json"
          },
          "infoType": {
            "title": "Information type",
            "description": "REQUIRED. Reference to the InfoType object. Indicates the type of information handled in this traffic.",
            "oneOf": [
              {
                "type": "object",
                "$ref": "https://reindeer.tech/cds-schema/v1/infoType.json"
              },
              {
                "type": "object",
                "$ref": "https://reindeer.tech/cds-schema/v1/refToInfoType.json"
              }
            ]
          },
          "ports": {
            "title": "Ports",
            "description": "REQUIRED. Port numbers required at the end points of this traffic.",
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "internet": {
            "title": "Internet usage",
            "description": "REQUIRED. Use internet or not for this connection.",
            "type": "boolean"
          },
          "restriction": {
            "title": "Restricted by IP range, domain or the others",
            "description": "REQUIRED. Source IP, Domain or the other restriction at the end points of this trigger.",
            "type": "boolean"
          },
          "source": {
            "title": "Source objects",
            "description": "REQUIRED. References to the trigger object or the traffic object. The start point of this traffic. This effects to or is affected by all of the resources or actor object described in the end fields.",
            "type": "object",
            "oneOf": [
              {
                "type": "object",
                "$ref": "https://reindeer.tech/cds-schema/v1/refToTrigger.json"
              },
              {
                "type": "object",
                "$ref": "https://reindeer.tech/cds-schema/v1/refToTraffic.json"
              }
            ]
          },
          "end": {
            "title": "End objects",
            "description": "REQUIRED. References to the actor objects or the each resource item described in the resource object. The end point of this traffic.",
            "type": "array",
            "items": {
              "anyOf": [
                {
                  "type": "object",
                  "$ref": "https://reindeer.tech/cds-schema/v1/refToActor.json"
                },
                {
                  "type": "object",
                  "$ref": "https://reindeer.tech/cds-schema/v1/refToResources.json"
                }
              ]
            }
          },
          "passThroughReqRatio": {
            "title": "Request ratio",
            "description": "REQUIRED. Indicates what percentage of the requests received by prior trigger or traffic (source field) will flow to the endpoint (end) of this traffic. For example, if the former trigger receives 100,000/M requests from the user and use internal cash for 50% response and pass 50% request to this traffic, this value will be 0.5.",
            "$ref": "https://reindeer.tech/cds-schema/v1/rangeValue.json"
          },
          "compositResRatio": {
            "title": "Composition ratio",
            "description": "REQUIRED. Based on the size of the response data handled by the former trigger or traffic (source field), describes that this traffic response what percentage of that size to the source. For example, if the former trigger returns data of 10GB/Month to the user and this compositResRatio is 0.5, this traffic will response 5GB/Month of data to the former trigger.",
            "$ref": "https://reindeer.tech/cds-schema/v1/rangeValue.json"
          },
          "endpointTitle": {
            "title": "The name of the endpoint",
            "description": "REQUIRED. The key MUST be 2 letter language code of ISO 639-1. And the value MUST be within 150 letters string of UTF-8. The name of the endpoint.",
            "type": "object",
            "$ref": "https://reindeer.tech/cds-schema/v1/title.json"
          },
          "storedRatio": {
            "title": "Stored data size ratio",
            "description": "The key MUST be 2 letter language code of ISO 639-1. And the value MUST be within 255 letters string of UTF-8. The description of the endpoint. It SHOULD be the concise memo describing the purpose of storage of the ends in this traffic.",
            "$ref": "https://reindeer.tech/cds-schema/v1/rangeValue.json"
          },
          "storedInfoType": {
            "title": "Information type of the storage",
            "description": "Reference to the InfoType object. Indicates the type of information stored at the ends of this traffic.",
            "oneOf": [
              {
                "type": "object",
                "$ref": "https://reindeer.tech/cds-schema/v1/infoType.json"
              },
              {
                "type": "object",
                "$ref": "https://reindeer.tech/cds-schema/v1/refToInfoType.json"
              }
            ]
          },
          "storageDescription": {
            "title": "Purpose of the storage",
            "description": "REQUIRED. The key MUST be 2 letter language code of ISO 639-1. And the value MUST be within 255 letters string of UTF-8. The description of the endpoint. It SHOULD be the concise memo describing the purpose of storage of the ends in this traffic.",
            "$ref": "https://reindeer.tech/cds-schema/v1/description.json"
          },
          "additionalProperties": false
        }
      }
    },
    {
      "uri": "https://reindeer.tech/cds-schema/v1/rangeValue.json",
      "schema": {
        "title": "Range values object",
        "description": "An object representing the range values used at fields on CDS.",
        "type": "object",
        "required": [
          "max",
          "min"
        ],
        "properties": {
          "max": {
            "title": "Max value",
            "description": "REQUIRED. Max value of the range value.",
            "type": "number",
            "minimum": 0
          },
          "min": {
            "title": "Min value",
            "description": "REQUIRED. Min value of the range value.",
            "type": "number",
            "minimum": 0
          }
        }
      }
    }
  ]
}